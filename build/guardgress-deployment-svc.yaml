apiVersion: v1
kind: ServiceAccount
metadata:
  name: guardgress
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-reader
rules:
- apiGroups: [""]
  resources: ["services","secrets"]
  verbs: ["get", "watch", "list"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses",]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pod-reader-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: guardgress
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: guardgress
  name: guardgress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: guardgress
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: guardgress
    spec:
      # TODO: Add health checks
      serviceAccountName: guardgress
      containers:
      - image: docker.io/library/guardgress:1.0.0-dev
        name: guardgress
        env:
        - name: PORT
          value: "80"
        - name: TLS_PORT
          value: "443"
        - name: HOST
          value: "0.0.0.0"
        - name: GIN_MODE
          value: "release"
        - name: LOG_LEVEL
          value: "info"
        ports:
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 80
          name: http
          protocol: TCP
        resources: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: guardgress
  name: guardgress
spec:
  type: NodePort
  ports:
  - port: 443
    name: https
    protocol: TCP
    targetPort: 443
  - port: 80
    name: http
    protocol: TCP
    targetPort: 80
  selector:
    app: guardgress
status:
  loadBalancer: {}
